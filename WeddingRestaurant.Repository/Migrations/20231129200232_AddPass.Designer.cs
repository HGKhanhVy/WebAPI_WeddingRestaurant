// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeddingRestaurant.Repository.Infrastructure;

#nullable disable

namespace WeddingRestaurant.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231129200232_AddPass")]
    partial class AddPass
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.AccessTokenEntity", b =>
                {
                    b.Property<DateTime>("ExpireAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("StrTokenIDToken")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StrTokenIDToken");

                    b.HasIndex("userName");

                    b.ToTable("AccessToken");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietDichVuTinhPhiEntity", b =>
                {
                    b.Property<string>("MaTiec")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaDichVuTinhPhi")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTiec", "MaDichVuTinhPhi");

                    b.HasIndex("MaDichVuTinhPhi");

                    b.ToTable("ChiTietDichVuTinhPhi");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietDichVuUuDaiEntity", b =>
                {
                    b.Property<string>("MaTiec")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaDichVuUuDai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTiec", "MaDichVuUuDai");

                    b.HasIndex("MaDichVuUuDai");

                    b.ToTable("ChiTietDichVuUuDai");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietMenuEntity", b =>
                {
                    b.Property<string>("MaTiec")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaMenu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoLuongMenuCuaTiec")
                        .HasColumnType("int");

                    b.Property<double>("TongTien")
                        .HasColumnType("float");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTiec", "MaMenu");

                    b.HasIndex("MaMenu");

                    b.ToTable("ChiTietMenu");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietNuocUongEntity", b =>
                {
                    b.Property<string>("MaTiec")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNuoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<double>("TongTien")
                        .HasColumnType("float");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTiec", "MaNuoc");

                    b.HasIndex("MaNuoc");

                    b.ToTable("ChiTietNuocUong");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietPhuThuDichVuEntity", b =>
                {
                    b.Property<string>("MaPhuThu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaDichVuTinhPhi")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("DonGia")
                        .HasColumnType("float");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhuThu", "MaDichVuTinhPhi");

                    b.HasIndex("MaDichVuTinhPhi");

                    b.ToTable("ChiTietPhuThuDichVu");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietPhuThuMonAnEntity", b =>
                {
                    b.Property<string>("MaPhuThu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaMonAn")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("DonGia")
                        .HasColumnType("float");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhuThu", "MaMonAn");

                    b.HasIndex("MaMonAn");

                    b.ToTable("ChiTietPhuThuMonAn");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietPhuThuNuocEntity", b =>
                {
                    b.Property<string>("MaPhuThu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNuoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("DonGia")
                        .HasColumnType("float");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<double>("ThanhTien")
                        .HasColumnType("float");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhuThu", "MaNuoc");

                    b.HasIndex("MaNuoc");

                    b.ToTable("ChiTietPhuThuNuoc");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DanhGiaEntity", b =>
                {
                    b.Property<string>("MaDanhGia")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NoiDungDanhGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDanhGia");

                    b.HasIndex("MaKhachHang");

                    b.ToTable("DanhGia");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DatTiecEntity", b =>
                {
                    b.Property<string>("MaTiec")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiBan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiHinhTiec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaHoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayDatTiec")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayToChuc")
                        .HasColumnType("datetime2");

                    b.Property<double>("PhiDichVu")
                        .HasColumnType("float");

                    b.Property<int>("SoLuongBanChay")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongBanChinhThuc")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongBanDuPhong")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongBanTang")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianToChuc")
                        .HasColumnType("datetime2");

                    b.Property<double>("TienCocLan1")
                        .HasColumnType("float");

                    b.Property<double>("TienCocLan2")
                        .HasColumnType("float");

                    b.Property<int>("TongBanSetup")
                        .HasColumnType("int");

                    b.Property<double>("TongTienDuKien")
                        .HasColumnType("float");

                    b.Property<double>("TongTienGiam")
                        .HasColumnType("float");

                    b.Property<double>("TongTienPhaiTra")
                        .HasColumnType("float");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTiec");

                    b.HasIndex("MaKhachHang");

                    b.ToTable("DatTiec");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DichVuEntity", b =>
                {
                    b.Property<string>("MaDichVu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaLoaiDichVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenDichVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDichVu");

                    b.HasIndex("MaLoaiDichVu");

                    b.ToTable("DichVu");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DichVuTinhPhiEntity", b =>
                {
                    b.Property<string>("MaDichVuTinhPhi")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("DonGiaDichVu")
                        .HasColumnType("float");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaDichVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDichVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDichVuTinhPhi");

                    b.HasIndex("MaDichVu");

                    b.ToTable("DichVuTinhPhi");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DichVuUuDaiEntity", b =>
                {
                    b.Property<string>("MaDichVuUuDai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DieuKienApDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaDichVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDichVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDichVuUuDai");

                    b.HasIndex("MaDichVu");

                    b.ToTable("DichVuUuDai");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.HoaDonEntity", b =>
                {
                    b.Property<string>("MaHoaDon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaTiec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgayLap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TongTienPhuThu")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TongTienThanhToan")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHoaDon");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.KhachHangEntity", b =>
                {
                    b.Property<string>("MaKhachHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgaySinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKhachHang");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.LichSanhTiecEntity", b =>
                {
                    b.Property<string>("MaTiec")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSanh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayDienRa")
                        .HasColumnType("datetime2");

                    b.Property<double>("TienPhuThu")
                        .HasColumnType("float");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTiec", "MaSanh");

                    b.HasIndex("MaSanh");

                    b.ToTable("LichSanhTiec");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.LoaiDichVuEntity", b =>
                {
                    b.Property<string>("MaLoaiDichVu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenLoaiDichVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoaiDichVu");

                    b.ToTable("LoaiDichVu");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.LoaiMonAnEntity", b =>
                {
                    b.Property<string>("MaLoaiMonAn")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenLoaiMon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoaiMonAn");

                    b.ToTable("LoaiMonAn");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.LoaiNuocEntity", b =>
                {
                    b.Property<string>("MaLoaiNuoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenLoaiNuoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoaiNuoc");

                    b.ToTable("LoaiNuoc");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.MenuEntity", b =>
                {
                    b.Property<string>("MaMenu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("DonGiaMenu")
                        .HasColumnType("float");

                    b.Property<string>("TenMenu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaMenu");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.MonAnEntity", b =>
                {
                    b.Property<string>("MaMonAn")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DVT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DonGia")
                        .HasColumnType("float");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaLoaiMonAn")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenMonAn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaMonAn");

                    b.HasIndex("MaLoaiMonAn");

                    b.ToTable("MonAn");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.MonAnTrongMenuEntity", b =>
                {
                    b.Property<string>("MaMenu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaMonAn")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("DonGia")
                        .HasColumnType("float");

                    b.Property<int>("SoLuongMon")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaMenu", "MaMonAn");

                    b.HasIndex("MaMonAn");

                    b.ToTable("MonAnTrongMenu");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.NguoiDungEntity", b =>
                {
                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("quyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userName");

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.NhanVienEntity", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgayNghiViec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgaySinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgayVaoLam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.NhanVienTrongTiecEntity", b =>
                {
                    b.Property<string>("MaTiec")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTiec", "MaNhanVien");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("NhanVienTrongTiec");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.NuocEntity", b =>
                {
                    b.Property<string>("MaNuoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DVT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DonGia")
                        .HasColumnType("float");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaLoaiNuoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenNuoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNuoc");

                    b.HasIndex("MaLoaiNuoc");

                    b.ToTable("Nuoc");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.PhuThuEntity", b =>
                {
                    b.Property<string>("MaPhuThu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoaiPhuThu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaHoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTaPhuThu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TongTien")
                        .HasColumnType("float");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhuThu");

                    b.HasIndex("MaHoaDon");

                    b.ToTable("PhuThu");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.RefreshTokenEntity", b =>
                {
                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ExpireAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("JwtID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrTokenIDToken")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Token", "userName");

                    b.HasIndex("StrTokenIDToken");

                    b.HasIndex("userName");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.SanhEntity", b =>
                {
                    b.Property<string>("MaSanh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SucChuaToiDa")
                        .HasColumnType("int");

                    b.Property<int>("SucChuaToiThieu")
                        .HasColumnType("int");

                    b.Property<string>("TenSanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSanh");

                    b.ToTable("Sanh");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.TokenEntity", b =>
                {
                    b.Property<string>("IDToken")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDToken");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.AccessTokenEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.TokenEntity", "StrToken")
                        .WithMany()
                        .HasForeignKey("StrTokenIDToken");

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.NguoiDungEntity", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("userName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("StrToken");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietDichVuTinhPhiEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.DichVuTinhPhiEntity", "DichVuTinhPhis")
                        .WithMany("ChiTietDichVuTinhPhis")
                        .HasForeignKey("MaDichVuTinhPhi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.DatTiecEntity", "DatTiecs")
                        .WithMany("ChiTietDichVuTinhPhis")
                        .HasForeignKey("MaTiec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatTiecs");

                    b.Navigation("DichVuTinhPhis");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietDichVuUuDaiEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.DichVuUuDaiEntity", "DichVuUuDais")
                        .WithMany("ChiTietDichVuUuDais")
                        .HasForeignKey("MaDichVuUuDai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.DatTiecEntity", "DatTiecs")
                        .WithMany("ChiTietDichVuUuDais")
                        .HasForeignKey("MaTiec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatTiecs");

                    b.Navigation("DichVuUuDais");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietMenuEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.MenuEntity", "Menus")
                        .WithMany("ChiTietMenus")
                        .HasForeignKey("MaMenu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.DatTiecEntity", "DatTiecs")
                        .WithMany("ChiTietMenus")
                        .HasForeignKey("MaTiec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatTiecs");

                    b.Navigation("Menus");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietNuocUongEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.NuocEntity", "Nuocs")
                        .WithMany("ChiTietNuocUongs")
                        .HasForeignKey("MaNuoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.DatTiecEntity", "DatTiecs")
                        .WithMany("ChiTietNuocUongs")
                        .HasForeignKey("MaTiec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatTiecs");

                    b.Navigation("Nuocs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietPhuThuDichVuEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.DichVuTinhPhiEntity", "DichVuTinhPhis")
                        .WithMany("ChiTietPhuThuDichVus")
                        .HasForeignKey("MaDichVuTinhPhi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.PhuThuEntity", "PhuThus")
                        .WithMany("ChiTietPhuThuDichVus")
                        .HasForeignKey("MaPhuThu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DichVuTinhPhis");

                    b.Navigation("PhuThus");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietPhuThuMonAnEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.MonAnEntity", "MonAns")
                        .WithMany("ChiTietPhuThuMonAns")
                        .HasForeignKey("MaMonAn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.PhuThuEntity", "PhuThus")
                        .WithMany("ChiTietPhuThuMonAns")
                        .HasForeignKey("MaPhuThu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonAns");

                    b.Navigation("PhuThus");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietPhuThuNuocEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.NuocEntity", "Nuocs")
                        .WithMany("ChiTietPhuThuNuocs")
                        .HasForeignKey("MaNuoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.PhuThuEntity", "PhuThus")
                        .WithMany("ChiTietPhuThuNuocs")
                        .HasForeignKey("MaPhuThu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nuocs");

                    b.Navigation("PhuThus");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DanhGiaEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.KhachHangEntity", "KhachHangs")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHangs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DatTiecEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.KhachHangEntity", "KhachHangs")
                        .WithMany("DatTiecs")
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.HoaDonEntity", "HoaDons")
                        .WithOne("DatTiecs")
                        .HasForeignKey("WeddingRestaurant.Contract.Repository.Models.DatTiecEntity", "MaTiec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDons");

                    b.Navigation("KhachHangs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DichVuEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.LoaiDichVuEntity", "LoaiDichVus")
                        .WithMany("DichVus")
                        .HasForeignKey("MaLoaiDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiDichVus");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DichVuTinhPhiEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.DichVuEntity", "DichVus")
                        .WithMany("DichVuTinhPhis")
                        .HasForeignKey("MaDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DichVus");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DichVuUuDaiEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.DichVuEntity", "DichVus")
                        .WithMany("DichVuUuDais")
                        .HasForeignKey("MaDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DichVus");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.LichSanhTiecEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.SanhEntity", "Sanhs")
                        .WithMany("LichSanhTiecs")
                        .HasForeignKey("MaSanh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.DatTiecEntity", "DatTiecs")
                        .WithMany("LichSanhTiecs")
                        .HasForeignKey("MaTiec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatTiecs");

                    b.Navigation("Sanhs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.MonAnEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.LoaiMonAnEntity", "LoaiMonAns")
                        .WithMany("MonAns")
                        .HasForeignKey("MaLoaiMonAn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiMonAns");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.MonAnTrongMenuEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.MenuEntity", "Menus")
                        .WithMany("MonAnTrongMenus")
                        .HasForeignKey("MaMenu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.MonAnEntity", "MonAns")
                        .WithMany("MonAnTrongMenus")
                        .HasForeignKey("MaMonAn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menus");

                    b.Navigation("MonAns");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.NhanVienTrongTiecEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.NhanVienEntity", "NhanViens")
                        .WithMany("NhanVienTrongTiecs")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.DatTiecEntity", "DatTiecs")
                        .WithMany("NhanVienTrongTiecs")
                        .HasForeignKey("MaTiec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatTiecs");

                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.NuocEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.LoaiNuocEntity", "LoaiNuocs")
                        .WithMany("Nuocs")
                        .HasForeignKey("MaLoaiNuoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiNuocs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.PhuThuEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.HoaDonEntity", "HoaDons")
                        .WithMany("PhuThus")
                        .HasForeignKey("MaHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.RefreshTokenEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.TokenEntity", "StrToken")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("StrTokenIDToken");

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.NguoiDungEntity", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("userName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("StrToken");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DatTiecEntity", b =>
                {
                    b.Navigation("ChiTietDichVuTinhPhis");

                    b.Navigation("ChiTietDichVuUuDais");

                    b.Navigation("ChiTietMenus");

                    b.Navigation("ChiTietNuocUongs");

                    b.Navigation("LichSanhTiecs");

                    b.Navigation("NhanVienTrongTiecs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DichVuEntity", b =>
                {
                    b.Navigation("DichVuTinhPhis");

                    b.Navigation("DichVuUuDais");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DichVuTinhPhiEntity", b =>
                {
                    b.Navigation("ChiTietDichVuTinhPhis");

                    b.Navigation("ChiTietPhuThuDichVus");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DichVuUuDaiEntity", b =>
                {
                    b.Navigation("ChiTietDichVuUuDais");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.HoaDonEntity", b =>
                {
                    b.Navigation("DatTiecs")
                        .IsRequired();

                    b.Navigation("PhuThus");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.KhachHangEntity", b =>
                {
                    b.Navigation("DanhGias");

                    b.Navigation("DatTiecs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.LoaiDichVuEntity", b =>
                {
                    b.Navigation("DichVus");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.LoaiMonAnEntity", b =>
                {
                    b.Navigation("MonAns");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.LoaiNuocEntity", b =>
                {
                    b.Navigation("Nuocs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.MenuEntity", b =>
                {
                    b.Navigation("ChiTietMenus");

                    b.Navigation("MonAnTrongMenus");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.MonAnEntity", b =>
                {
                    b.Navigation("ChiTietPhuThuMonAns");

                    b.Navigation("MonAnTrongMenus");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.NhanVienEntity", b =>
                {
                    b.Navigation("NhanVienTrongTiecs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.NuocEntity", b =>
                {
                    b.Navigation("ChiTietNuocUongs");

                    b.Navigation("ChiTietPhuThuNuocs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.PhuThuEntity", b =>
                {
                    b.Navigation("ChiTietPhuThuDichVus");

                    b.Navigation("ChiTietPhuThuMonAns");

                    b.Navigation("ChiTietPhuThuNuocs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.SanhEntity", b =>
                {
                    b.Navigation("LichSanhTiecs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.TokenEntity", b =>
                {
                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
