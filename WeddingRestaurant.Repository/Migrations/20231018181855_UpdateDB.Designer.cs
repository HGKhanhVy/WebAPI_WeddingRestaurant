// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeddingRestaurant.Repository.Infrastructure;

#nullable disable

namespace WeddingRestaurant.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231018181855_UpdateDB")]
    partial class UpdateDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.AccessTokenEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("ExpireAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("StrTokenId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("StrTokenId");

                    b.HasIndex("userName");

                    b.ToTable("AccessToken");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietDichVuEntity", b =>
                {
                    b.Property<string>("MaTiec")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaDichVu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("TongTien")
                        .HasColumnType("float");

                    b.HasKey("MaTiec", "MaDichVu");

                    b.HasIndex("MaDichVu");

                    b.ToTable("ChiTietDichVu");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietMenuEntity", b =>
                {
                    b.Property<string>("MaTiec")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaMenu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("SoLuongMenuBan")
                        .HasColumnType("int");

                    b.Property<double>("TongTien")
                        .HasColumnType("float");

                    b.HasKey("MaTiec", "MaMenu");

                    b.HasIndex("MaMenu");

                    b.ToTable("ChiTietMenu");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietNuocUongEntity", b =>
                {
                    b.Property<string>("MaTiec")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNuoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<double>("TongTien")
                        .HasColumnType("float");

                    b.HasKey("MaTiec", "MaNuoc");

                    b.HasIndex("MaNuoc");

                    b.ToTable("ChiTietNuocUong");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DatTiecEntity", b =>
                {
                    b.Property<string>("MaTiec")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhachHangsMaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("NgayDatTiec")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("NgayToChuc")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("PhiDichVu")
                        .HasColumnType("float");

                    b.Property<int>("SoBan")
                        .HasColumnType("int");

                    b.Property<string>("TenTiec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTiec");

                    b.HasIndex("KhachHangsMaKhachHang");

                    b.ToTable("DatTiec");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DichVuEntity", b =>
                {
                    b.Property<string>("MaDichVu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("DonGiaDichVu")
                        .HasColumnType("float");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TenDichVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDichVu");

                    b.ToTable("DichVu");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.KhachHangEntity", b =>
                {
                    b.Property<string>("MaKhachHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NgaySinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKhachHang");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.KhuyenMaiEntity", b =>
                {
                    b.Property<string>("MaKM")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DieuKien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GiaTri")
                        .HasColumnType("float");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKM");

                    b.ToTable("KhuyenMai");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.LichSanhTiecEntity", b =>
                {
                    b.Property<string>("MaTiec")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSanh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("NgayToChuc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTiec", "MaSanh");

                    b.HasIndex("MaSanh");

                    b.ToTable("LichSanhTiec");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.LoaiMonAnEntity", b =>
                {
                    b.Property<string>("MaLoaiMon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TenLoaiMon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoaiMon");

                    b.ToTable("LoaiMonAn");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.LoaiNuocEntity", b =>
                {
                    b.Property<string>("MaLoaiNuoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TenLoaiNuoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoaiNuoc");

                    b.ToTable("LoaiNuoc");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.MenuEntity", b =>
                {
                    b.Property<string>("MaMenu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("DonGiaMenu")
                        .HasColumnType("float");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("MaMenu");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.MonAnEntity", b =>
                {
                    b.Property<string>("MaMonAn")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DVT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("DonGia")
                        .HasColumnType("float");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LoaiMonAnsMaLoaiMon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaLoaiMon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMonAn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaMonAn");

                    b.HasIndex("LoaiMonAnsMaLoaiMon");

                    b.ToTable("MonAn");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.MonAnTrongMenuEntity", b =>
                {
                    b.Property<string>("MaMenu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaMonAn")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("DonGia")
                        .HasColumnType("float");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("SoLuongMon")
                        .HasColumnType("int");

                    b.HasKey("MaMenu", "MaMonAn");

                    b.HasIndex("MaMonAn");

                    b.ToTable("MonAnTrongMenu");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.NguoiDungEntity", b =>
                {
                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("quyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userName");

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.NuocEntity", b =>
                {
                    b.Property<string>("MaNuoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DVT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("DonGia")
                        .HasColumnType("float");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LoaiNuocsMaLoaiNuoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaLoaiNuoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNuoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNuoc");

                    b.HasIndex("LoaiNuocsMaLoaiNuoc");

                    b.ToTable("Nuoc");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.RefreshTokenEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("ExpireAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("JwtID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("StrTokenId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("StrTokenId");

                    b.HasIndex("userName");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.SanhEntity", b =>
                {
                    b.Property<string>("MaSanh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("SucChucToiDa")
                        .HasColumnType("int");

                    b.Property<int>("SucChucToiThieu")
                        .HasColumnType("int");

                    b.Property<string>("TenSanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSanh");

                    b.ToTable("Sanh");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.SuDungKhuyenMaiEntity", b =>
                {
                    b.Property<string>("MaTiec")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKM")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("MaTiec", "MaKM");

                    b.HasIndex("MaKM");

                    b.ToTable("SuDungKhuyenMai");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.TokenEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.AccessTokenEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.TokenEntity", "StrToken")
                        .WithMany()
                        .HasForeignKey("StrTokenId");

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.NguoiDungEntity", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("userName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("StrToken");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietDichVuEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.DichVuEntity", "DichVus")
                        .WithMany("ChiTietDichVus")
                        .HasForeignKey("MaDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.DatTiecEntity", "DatTiecs")
                        .WithMany("ChiTietDichVus")
                        .HasForeignKey("MaTiec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatTiecs");

                    b.Navigation("DichVus");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietMenuEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.MenuEntity", "Menus")
                        .WithMany("ChiTietMenus")
                        .HasForeignKey("MaMenu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.DatTiecEntity", "DatTiecs")
                        .WithMany("ChiTietMenus")
                        .HasForeignKey("MaTiec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatTiecs");

                    b.Navigation("Menus");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.ChiTietNuocUongEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.NuocEntity", "Nuocs")
                        .WithMany("ChiTietNuocUongs")
                        .HasForeignKey("MaNuoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.DatTiecEntity", "DatTiecs")
                        .WithMany("ChiTietNuocUongs")
                        .HasForeignKey("MaTiec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatTiecs");

                    b.Navigation("Nuocs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DatTiecEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.KhachHangEntity", "KhachHangs")
                        .WithMany("DatTiecs")
                        .HasForeignKey("KhachHangsMaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHangs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.LichSanhTiecEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.SanhEntity", "Sanhs")
                        .WithMany("LichSanhTiecs")
                        .HasForeignKey("MaSanh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.DatTiecEntity", "DatTiecs")
                        .WithMany("LichSanhTiecs")
                        .HasForeignKey("MaTiec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatTiecs");

                    b.Navigation("Sanhs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.MonAnEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.LoaiMonAnEntity", "LoaiMonAns")
                        .WithMany("MonAns")
                        .HasForeignKey("LoaiMonAnsMaLoaiMon");

                    b.Navigation("LoaiMonAns");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.MonAnTrongMenuEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.MenuEntity", "Menus")
                        .WithMany("MonAnTrongMenus")
                        .HasForeignKey("MaMenu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.MonAnEntity", "MonAns")
                        .WithMany("MonAnTrongMenus")
                        .HasForeignKey("MaMonAn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menus");

                    b.Navigation("MonAns");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.NuocEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.LoaiNuocEntity", "LoaiNuocs")
                        .WithMany("Nuocs")
                        .HasForeignKey("LoaiNuocsMaLoaiNuoc");

                    b.Navigation("LoaiNuocs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.RefreshTokenEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.TokenEntity", "StrToken")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("StrTokenId");

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.NguoiDungEntity", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("userName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("StrToken");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.SuDungKhuyenMaiEntity", b =>
                {
                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.KhuyenMaiEntity", "KhuyenMais")
                        .WithMany("SuDungKhuyenMais")
                        .HasForeignKey("MaKM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingRestaurant.Contract.Repository.Models.DatTiecEntity", "DatTiecs")
                        .WithMany("SuDungKhuyenMais")
                        .HasForeignKey("MaTiec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatTiecs");

                    b.Navigation("KhuyenMais");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DatTiecEntity", b =>
                {
                    b.Navigation("ChiTietDichVus");

                    b.Navigation("ChiTietMenus");

                    b.Navigation("ChiTietNuocUongs");

                    b.Navigation("LichSanhTiecs");

                    b.Navigation("SuDungKhuyenMais");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.DichVuEntity", b =>
                {
                    b.Navigation("ChiTietDichVus");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.KhachHangEntity", b =>
                {
                    b.Navigation("DatTiecs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.KhuyenMaiEntity", b =>
                {
                    b.Navigation("SuDungKhuyenMais");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.LoaiMonAnEntity", b =>
                {
                    b.Navigation("MonAns");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.LoaiNuocEntity", b =>
                {
                    b.Navigation("Nuocs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.MenuEntity", b =>
                {
                    b.Navigation("ChiTietMenus");

                    b.Navigation("MonAnTrongMenus");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.MonAnEntity", b =>
                {
                    b.Navigation("MonAnTrongMenus");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.NuocEntity", b =>
                {
                    b.Navigation("ChiTietNuocUongs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.SanhEntity", b =>
                {
                    b.Navigation("LichSanhTiecs");
                });

            modelBuilder.Entity("WeddingRestaurant.Contract.Repository.Models.TokenEntity", b =>
                {
                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
